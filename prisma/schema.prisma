generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model lista {
  nome            String            @id @db.VarChar(255)
  data_publicacao DateTime          @db.Date
  frequencia      String?           @db.VarChar(255)
  livros_da_lista livros_da_lista[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model livro {
  isbn            String            @id @db.VarChar(13)
  titulo          String            @db.VarChar(255)
  autor           String
  categoria       String            @db.VarChar(255)
  data_publicacao DateTime          @db.Date
  descricao       String?
  num_paginas     Int?
  link_thumbnail  String?           @db.VarChar(255)
  nota_media      Float?
  livros_da_lista livros_da_lista[]
  review          review[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model livros_da_lista {
  lista_nome String @db.VarChar(255)
  livro_isbn String @db.VarChar(13)
  rank       Int?
  lista      lista  @relation(fields: [lista_nome], references: [nome], onDelete: NoAction, onUpdate: NoAction)
  livro      livro  @relation(fields: [livro_isbn], references: [isbn], onDelete: NoAction, onUpdate: NoAction)

  @@id([lista_nome, livro_isbn])
}

model review {
  livro_isbn      String    @db.VarChar(13)
  autor           String    @db.VarChar(255)
  data_publicacao DateTime? @db.Date
  sumario         String?
  link_url_review String?   @db.VarChar(255)
  numero_review   Int?
  livro           livro     @relation(fields: [livro_isbn], references: [isbn], onDelete: NoAction, onUpdate: NoAction)

  @@id([autor, livro_isbn])
}
